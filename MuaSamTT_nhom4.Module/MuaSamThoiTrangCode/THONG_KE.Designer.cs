//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
using DevExpress.ExpressApp;
namespace MuaSamTT_nhom4.Module.MuaSamThoiTrang
{

    public partial class THONG_KE : DevExpress.Persistent.BaseImpl.BaseObject
    {
        protected override void OnDeleting()
        {
            if (DAT_HANGs.Count > 0)
            {
                throw new UserFriendlyException("Không thể xoá Thống Kê này vì nó liên quan đến các ĐƠN Đặt Trong Hệ Thống!");
            }
            if (CT_DAT_HANGs.Count > 0)
            {
                throw new UserFriendlyException("Không thể xoá Thống Kê này vì nó liên quan đến các CT_ĐƠN Đặt Trong Hệ Thống!");
            }

            base.OnDeleting();
        }
        string fMaTK;
        [DevExpress.Xpo.DisplayName(@"Mã Thống Kê")]
        public string MaTK
        {
            get { return fMaTK; }
            set { SetPropertyValue<string>(nameof(MaTK), ref fMaTK, value); }
        }
        NHAN_VIEN fMaNV;
        [Association(@"THONG_KEReferencesNHAN_VIEN")]
        public NHAN_VIEN MaNV
        {
            get { return fMaNV; }
            set { SetPropertyValue<NHAN_VIEN>(nameof(MaNV), ref fMaNV, value); }
        }
        DateTime fNgayThongKe;
        [DevExpress.Xpo.DisplayName(@"Ngày Thống Kê")]
        [DevExpress.ExpressApp.Model.ModelDefault("DisplayFormat", "{0:dd/MM/yyyy HH:mm}"),
DevExpress.ExpressApp.Model.ModelDefault("EditMask", "dd/MM/yyyy HH:mm")]
        public DateTime NgayThongKe
        {
            get { return fNgayThongKe; }
            set { SetPropertyValue<DateTime>(nameof(NgayThongKe), ref fNgayThongKe, value); }
        }
        int fSoDonHang;
        [DevExpress.Xpo.DisplayName(@"Số Đơn Hàng")]
        public int SoDonHang
        {
            get
            {
                int totalOrders = 0;

                foreach (CT_DAT_HANG item in CT_DAT_HANGs)
                {
                    totalOrders += item.SoLuong;
                }

                return totalOrders;
            }
            set { SetPropertyValue<int>(nameof(SoDonHang), ref fSoDonHang, value); }
        }
        [Association(@"DAT_HANGReferencesTHONG_KE"), Aggregated]
        public XPCollection<DAT_HANG> DAT_HANGs { get { return GetCollection<DAT_HANG>(nameof(DAT_HANGs)); } }
        [Association(@"CT_DAT_HANGReferencesTHONG_KE"), Aggregated]
        public XPCollection<CT_DAT_HANG> CT_DAT_HANGs { get { return GetCollection<CT_DAT_HANG>(nameof(CT_DAT_HANGs)); } }
    }

}
